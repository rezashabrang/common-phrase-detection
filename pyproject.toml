# Poetry pyproject.toml: https://python-poetry.org/docs/pyproject/
[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "phrase_counter"
version = "0.1.7"
description = "Counting stop words."
readme = "README.md"
authors = ["aasaam <rezashabrang.m@gmail.com>"]
license = "MIT"
repository = "https://github.com/rezashabrang/stop-word-counter"
homepage = "https://github.com/rezashabrang/stop-word-counter"

# Keywords description https://python-poetry.org/docs/pyproject/#keywords
keywords = []  #! Update me

# Pypi classifiers: https://pypi.org/classifiers/
classifiers = [  #! Update me
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
]



[tool.poetry.dependencies]
python = "^3.8"
importlib_metadata = {version = "^4.5.0", python = "<3.8"}
cleaning-utils = "^0.1.5"
beautifulsoup4 = "*"
requests = "*"
scikit-learn = "*"
pandas = "*"
polyglot = "*"
PyICU = "^2.8.1"
pycld2 = "^0.41"


[tool.poetry.dev-dependencies]
pip = "^21.3.1"
bandit = "^1.7.0"
black = {version = "^22.3.0", allow-prereleases = true}
coverage = "^6.0"
coverage-badge = "^1.0.1"
darglint = "^1.8.0"
isort = {extras = ["colors"], version = "^5.9.3"}
mypy = "^0.910"
mypy-extensions = "^0.4.3"
pre-commit = "^2.14.0"
pydocstyle = "^6.1.1"
pylint = "^2.10.2"
pytest = "^6.2.4"
pytest-cov = "^3.0.0"
pytest-html = "^3.1.1"
pyupgrade = "^2.24.0"
safety = "^1.10.3"
anybadge = "^1.7.0"
pybadges = "^2.2.1"
flake8 = "^3.9.2"
radon = "^5.1.0"
docstr-coverage = "^2.1.1"
interrogate = "^1.5.0"
autopep8 = "*"
toml = "^0.10.2"
pydantic = "*"
types-requests = "*"
openpyxl = "*"

[tool.black]
# https://github.com/psf/black
target-version = ["py38"]
line-length = 88
color = true

exclude = '''
/(
    \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | env
    | venv
)/
'''

[tool.isort]
# https://github.com/timothycrosley/isort/
py_version = 38
line_length = 88

known_typing = ["typing", "types", "typing_extensions", "mypy", "mypy_extensions"]
sections = ["FUTURE", "TYPING", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
include_trailing_comma = true
profile = "black"
multi_line_output = 3
indent = 4
color_output = true

[tool.mypy]
# https://mypy.readthedocs.io/en/latest/config_file.html#using-a-pyproject-toml-file
python_version = 3.8
pretty = true
show_traceback = true
color_output = true
exclude = '''(?x)(
    data
    |sandbox/
    |setup.py
)'''

allow_redefinition = false
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
ignore_missing_imports = true
implicit_reexport = false
no_implicit_optional = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true


[tool.pytest.ini_options]
# https://docs.pytest.org/en/6.2.x/customize.html#pyproject-toml
# Directories that are not visited by pytest collector:
norecursedirs =["hooks", "*.egg", ".eggs", "dist", "build", "docs", ".tox", ".git", "__pycache__"]
doctest_optionflags = ["NUMBER", "NORMALIZE_WHITESPACE", "IGNORE_EXCEPTION_DETAIL"]

# Extra options:
addopts = [
  "--strict-markers",
  "--tb=short",
  "--doctest-modules",
  "--doctest-continue-on-failure",
]

testpaths = ['tests']

[tool.coverage.run]
source = ['phrase_counter', 'tests']

[tool.coverage.report]
fail_under = 80
show_missing = true
omit = ["phrase_counter/ingest_bench.py"]

[coverage.paths]
source = 'phrase_counter'

[coverage.run]
branch = true

[coverage.report]
fail_under = 80
show_missing = true

[tool.bandit]
tests = ["B201"]
skips = ["B101", "B601"]


[tool.bandit.any_other_function_with_shell_equals_true]
no_shell = [
  "os.execl",
  "os.execle",
  "os.execlp",
  "os.execlpe",
  "os.execv",
  "os.execve",
  "os.execvp",
  "os.execvpe",
  "os.spawnl",
  "os.spawnle",
  "os.spawnlp",
  "os.spawnlpe",
  "os.spawnv",
  "os.spawnve",
  "os.spawnvp",
  "os.spawnvpe",
  "os.startfile"
]
shell = [
  "os.system",
  "os.popen",
  "os.popen2",
  "os.popen3",
  "os.popen4",
  "popen2.popen2",
  "popen2.popen3",
  "popen2.popen4",
  "popen2.Popen3",
  "popen2.Popen4",
  "commands.getoutput",
  "commands.getstatusoutput"
]
subprocess = [
  "subprocess.Popen",
  "subprocess.call",
  "subprocess.check_call",
  "subprocess.check_output"
]


[tool.flake8]
max-line-length = 88

[tool.pydocstyle]
convention = "google"

[tool.pylint.'MESSAGES CONTROL']
max-line-length = 88
disable= "W0703, R0912, R0913, R0914, R0915, E0401, R0801, W0613, W0612, D415, R0903, R1720"
